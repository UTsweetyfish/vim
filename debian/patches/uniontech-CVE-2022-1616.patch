Index: vim/src/ex_docmd.c
===================================================================
--- vim.orig/src/ex_docmd.c
+++ vim/src/ex_docmd.c
@@ -3367,7 +3367,7 @@ append_command(char_u *cmd)
 
     STRCAT(IObuff, ": ");
     d = IObuff + STRLEN(IObuff);
-    while (*s != NUL && d - IObuff < IOSIZE - 7)
+    while (*s != NUL && d - IObuff +5 < IOSIZE)
     {
 	if (enc_utf8 ? (s[0] == 0xc2 && s[1] == 0xa0) : *s == 0xa0)
 	{
@@ -3375,6 +3375,8 @@ append_command(char_u *cmd)
 	    STRCPY(d, "<a0>");
 	    d += 4;
 	}
+	else if (d - IObuff + (*mb_ptr2len)(s) + 1 >= IOSIZE)
+	    break;
 	else
 	    MB_COPY_CHAR(s, d);
     }
Index: vim/src/testdir/test_cmdline.vim
===================================================================
--- vim.orig/src/testdir/test_cmdline.vim
+++ vim/src/testdir/test_cmdline.vim
@@ -1078,6 +1078,17 @@ func Check_cmdline(cmdtype)
   return ''
 endfunc
 
+" this was going over the end of IObuff
+func Test_report_error_with_composing()
+  let caught = 'no'
+  try
+    exe repeat('0', 987) .. "0\xdd\x80\xdd\x80\xdd\x80\xdd\x80"
+  catch /E492:/
+    let caught = 'yes'
+  endtry
+  call assert_equal('yes', caught)
+endfunc
+
 set cpo&
 
 func Test_getcmdtype()
