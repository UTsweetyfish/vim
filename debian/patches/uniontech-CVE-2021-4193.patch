Index: vim/src/charset.c
===================================================================
--- vim.orig/src/charset.c
+++ vim/src/charset.c
@@ -1240,10 +1240,15 @@ getvcol(
 	posptr = NULL;  // continue until the NUL
     else
     {
-	// Special check for an empty line, which can happen on exit, when
-	// ml_get_buf() always returns an empty string.
-	if (*ptr == NUL)
-	    pos->col = 0;
+	colnr_T i;
+
+	// In a few cases the position can be beyond the end of the line.
+	for (i = 0; i < pos->col; ++i)
+	    if (ptr[i] == NUL)
+	    {
+		pos->col = i;
+		break;
+	    }
 	posptr = ptr + pos->col;
 	if (has_mbyte)
 	    // always start on the first byte
Index: vim/src/testdir/test_regexp_latin.vim
===================================================================
--- vim.orig/src/testdir/test_regexp_latin.vim
+++ vim/src/testdir/test_regexp_latin.vim
@@ -96,6 +96,14 @@ func Test_using_mark_position()
   bwipe!
 endfunc
 
+func Test_using_invalid_visual_position()
+  " this was going beyond the end of the line
+  new
+  exe "norm 0o000\<Esc>0\<C-V>$s0"
+  /\%V
+  bwipe!
+endfunc
+
 func Test_recursive_addstate()
   " This will call addstate() recursively until it runs into the limit.
   let lnum = search('\v((){328}){389}')
